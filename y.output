
state 0
	$accept: .program $end 
	margin: .    (4)

	.  reduce 4 (src line 51)

	program  goto 1
	margin  goto 2

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  margin.top margin 
	margin:  margin.NEWLINE 

	NEWLINE  shift 4
	NUM  shift 17
	IDENT  shift 13
	BOOL  shift 18
	IF  shift 9
	'('  shift 19
	'\\'  shift 11
	.  error

	top  goto 3
	expr  goto 12
	term  goto 14
	factor  goto 15
	atom  goto 16
	absexpr  goto 5
	abs  goto 7
	cmpexpr  goto 8
	decl  goto 10
	decls  goto 6

state 3
	program:  margin top.margin 
	margin: .    (4)

	.  reduce 4 (src line 51)

	margin  goto 20

state 4
	margin:  margin NEWLINE.    (5)

	.  reduce 5 (src line 52)


state 5
	top:  absexpr.    (2)

	.  reduce 2 (src line 35)


state 6
	top:  decls.newlines absexpr 
	decls:  decls.newlines decl 

	NEWLINE  shift 22
	.  error

	newlines  goto 21

state 7
	absexpr:  abs.    (10)

	.  reduce 10 (src line 73)


state 8
	absexpr:  cmpexpr.    (11)

	.  reduce 11 (src line 78)


state 9
	absexpr:  IF.cmpexpr THEN cmpexpr ELSE cmpexpr 

	NUM  shift 17
	IDENT  shift 24
	BOOL  shift 18
	'('  shift 19
	.  error

	expr  goto 12
	term  goto 14
	factor  goto 15
	atom  goto 16
	cmpexpr  goto 23

state 10
	decls:  decl.    (8)

	.  reduce 8 (src line 62)


state 11
	abs:  '\\'.IDENT RARROW absexpr 

	IDENT  shift 25
	.  error


state 12
	cmpexpr:  expr.    (13)
	cmpexpr:  expr.EQ expr 
	cmpexpr:  expr.'<' expr 
	cmpexpr:  expr.'>' expr 
	expr:  expr.'+' term 
	expr:  expr.'-' term 

	EQ  shift 26
	'<'  shift 27
	'>'  shift 28
	'+'  shift 29
	'-'  shift 30
	.  reduce 13 (src line 87)


state 13
	decl:  IDENT.'=' absexpr 
	atom:  IDENT.    (26)

	'='  shift 31
	.  reduce 26 (src line 145)


state 14
	expr:  term.    (17)
	term:  term.'*' factor 
	term:  term.'/' factor 

	'*'  shift 32
	'/'  shift 33
	.  reduce 17 (src line 102)


state 15
	term:  factor.    (20)
	factor:  factor.atom 

	NUM  shift 17
	IDENT  shift 24
	BOOL  shift 18
	'('  shift 19
	.  reduce 20 (src line 116)

	atom  goto 34

state 16
	factor:  atom.    (23)

	.  reduce 23 (src line 130)


state 17
	atom:  NUM.    (25)

	.  reduce 25 (src line 140)


state 18
	atom:  BOOL.    (27)

	.  reduce 27 (src line 149)


state 19
	atom:  '('.absexpr ')' 

	NUM  shift 17
	IDENT  shift 24
	BOOL  shift 18
	IF  shift 9
	'('  shift 19
	'\\'  shift 11
	.  error

	expr  goto 12
	term  goto 14
	factor  goto 15
	atom  goto 16
	absexpr  goto 35
	abs  goto 7
	cmpexpr  goto 8

state 20
	program:  margin top margin.    (1)
	margin:  margin.NEWLINE 

	NEWLINE  shift 4
	.  reduce 1 (src line 29)


state 21
	top:  decls newlines.absexpr 
	decls:  decls newlines.decl 

	NUM  shift 17
	IDENT  shift 13
	BOOL  shift 18
	IF  shift 9
	'('  shift 19
	'\\'  shift 11
	.  error

	expr  goto 12
	term  goto 14
	factor  goto 15
	atom  goto 16
	absexpr  goto 36
	abs  goto 7
	cmpexpr  goto 8
	decl  goto 37

state 22
	newlines:  NEWLINE.margin 
	margin: .    (4)

	.  reduce 4 (src line 51)

	margin  goto 38

state 23
	absexpr:  IF cmpexpr.THEN cmpexpr ELSE cmpexpr 

	THEN  shift 39
	.  error


state 24
	atom:  IDENT.    (26)

	.  reduce 26 (src line 145)


state 25
	abs:  '\\' IDENT.RARROW absexpr 

	RARROW  shift 40
	.  error


state 26
	cmpexpr:  expr EQ.expr 

	NUM  shift 17
	IDENT  shift 24
	BOOL  shift 18
	'('  shift 19
	.  error

	expr  goto 41
	term  goto 14
	factor  goto 15
	atom  goto 16

state 27
	cmpexpr:  expr '<'.expr 

	NUM  shift 17
	IDENT  shift 24
	BOOL  shift 18
	'('  shift 19
	.  error

	expr  goto 42
	term  goto 14
	factor  goto 15
	atom  goto 16

state 28
	cmpexpr:  expr '>'.expr 

	NUM  shift 17
	IDENT  shift 24
	BOOL  shift 18
	'('  shift 19
	.  error

	expr  goto 43
	term  goto 14
	factor  goto 15
	atom  goto 16

state 29
	expr:  expr '+'.term 

	NUM  shift 17
	IDENT  shift 24
	BOOL  shift 18
	'('  shift 19
	.  error

	term  goto 44
	factor  goto 15
	atom  goto 16

state 30
	expr:  expr '-'.term 

	NUM  shift 17
	IDENT  shift 24
	BOOL  shift 18
	'('  shift 19
	.  error

	term  goto 45
	factor  goto 15
	atom  goto 16

state 31
	decl:  IDENT '='.absexpr 

	NUM  shift 17
	IDENT  shift 24
	BOOL  shift 18
	IF  shift 9
	'('  shift 19
	'\\'  shift 11
	.  error

	expr  goto 12
	term  goto 14
	factor  goto 15
	atom  goto 16
	absexpr  goto 46
	abs  goto 7
	cmpexpr  goto 8

state 32
	term:  term '*'.factor 

	NUM  shift 17
	IDENT  shift 24
	BOOL  shift 18
	'('  shift 19
	.  error

	factor  goto 47
	atom  goto 16

state 33
	term:  term '/'.factor 

	NUM  shift 17
	IDENT  shift 24
	BOOL  shift 18
	'('  shift 19
	.  error

	factor  goto 48
	atom  goto 16

state 34
	factor:  factor atom.    (24)

	.  reduce 24 (src line 135)


state 35
	atom:  '(' absexpr.')' 

	')'  shift 49
	.  error


state 36
	top:  decls newlines absexpr.    (3)

	.  reduce 3 (src line 43)


state 37
	decls:  decls newlines decl.    (7)

	.  reduce 7 (src line 57)


state 38
	margin:  margin.NEWLINE 
	newlines:  NEWLINE margin.    (6)

	NEWLINE  shift 4
	.  reduce 6 (src line 54)


state 39
	absexpr:  IF cmpexpr THEN.cmpexpr ELSE cmpexpr 

	NUM  shift 17
	IDENT  shift 24
	BOOL  shift 18
	'('  shift 19
	.  error

	expr  goto 12
	term  goto 14
	factor  goto 15
	atom  goto 16
	cmpexpr  goto 50

state 40
	abs:  '\\' IDENT RARROW.absexpr 

	NUM  shift 17
	IDENT  shift 24
	BOOL  shift 18
	IF  shift 9
	'('  shift 19
	'\\'  shift 11
	.  error

	expr  goto 12
	term  goto 14
	factor  goto 15
	atom  goto 16
	absexpr  goto 51
	abs  goto 7
	cmpexpr  goto 8

state 41
	cmpexpr:  expr EQ expr.    (14)
	expr:  expr.'+' term 
	expr:  expr.'-' term 

	'+'  shift 29
	'-'  shift 30
	.  reduce 14 (src line 89)


state 42
	cmpexpr:  expr '<' expr.    (15)
	expr:  expr.'+' term 
	expr:  expr.'-' term 

	'+'  shift 29
	'-'  shift 30
	.  reduce 15 (src line 93)


state 43
	cmpexpr:  expr '>' expr.    (16)
	expr:  expr.'+' term 
	expr:  expr.'-' term 

	'+'  shift 29
	'-'  shift 30
	.  reduce 16 (src line 97)


state 44
	expr:  expr '+' term.    (18)
	term:  term.'*' factor 
	term:  term.'/' factor 

	'*'  shift 32
	'/'  shift 33
	.  reduce 18 (src line 107)


state 45
	expr:  expr '-' term.    (19)
	term:  term.'*' factor 
	term:  term.'/' factor 

	'*'  shift 32
	'/'  shift 33
	.  reduce 19 (src line 111)


state 46
	decl:  IDENT '=' absexpr.    (9)

	.  reduce 9 (src line 67)


state 47
	term:  term '*' factor.    (21)
	factor:  factor.atom 

	NUM  shift 17
	IDENT  shift 24
	BOOL  shift 18
	'('  shift 19
	.  reduce 21 (src line 121)

	atom  goto 34

state 48
	term:  term '/' factor.    (22)
	factor:  factor.atom 

	NUM  shift 17
	IDENT  shift 24
	BOOL  shift 18
	'('  shift 19
	.  reduce 22 (src line 125)

	atom  goto 34

state 49
	atom:  '(' absexpr ')'.    (28)

	.  reduce 28 (src line 153)


state 50
	absexpr:  IF cmpexpr THEN cmpexpr.ELSE cmpexpr 

	ELSE  shift 52
	.  error


state 51
	abs:  '\\' IDENT RARROW absexpr.    (29)

	.  reduce 29 (src line 158)


state 52
	absexpr:  IF cmpexpr THEN cmpexpr ELSE.cmpexpr 

	NUM  shift 17
	IDENT  shift 24
	BOOL  shift 18
	'('  shift 19
	.  error

	expr  goto 12
	term  goto 14
	factor  goto 15
	atom  goto 16
	cmpexpr  goto 53

state 53
	absexpr:  IF cmpexpr THEN cmpexpr ELSE cmpexpr.    (12)

	.  reduce 12 (src line 82)


23 terminals, 14 nonterminals
30 grammar rules, 54/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
63 working sets used
memory: parser 85/120000
38 extra closures
109 shift entries, 1 exceptions
33 goto entries
51 entries saved by goto default
Optimizer space used: output 81/120000
81 table entries, 8 zero
maximum spread: 23, maximum offset: 52

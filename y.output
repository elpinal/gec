
state 0
	$accept: .top $end 

	NUM  shift 14
	IDENT  shift 10
	BOOL  shift 15
	IF  shift 6
	'\\'  shift 8
	.  error

	top  goto 1
	expr  goto 9
	term  goto 11
	factor  goto 12
	atom  goto 13
	absexpr  goto 2
	abs  goto 4
	eqexpr  goto 5
	decl  goto 7
	decls  goto 3

state 1
	$accept:  top.$end 

	$end  accept
	.  error


state 2
	top:  absexpr.    (1)

	.  reduce 1 (src line 29)


state 3
	top:  decls.';' absexpr 
	decls:  decls.';' decl 

	';'  shift 16
	.  error


state 4
	absexpr:  abs.    (6)

	.  reduce 6 (src line 61)


state 5
	absexpr:  eqexpr.    (7)

	.  reduce 7 (src line 66)


state 6
	absexpr:  IF.eqexpr THEN eqexpr ELSE eqexpr 

	NUM  shift 14
	IDENT  shift 18
	BOOL  shift 15
	.  error

	expr  goto 9
	term  goto 11
	factor  goto 12
	atom  goto 13
	eqexpr  goto 17

state 7
	decls:  decl.    (4)

	.  reduce 4 (src line 50)


state 8
	abs:  '\\'.IDENT RARROW absexpr 

	IDENT  shift 19
	.  error


state 9
	eqexpr:  expr.    (9)
	eqexpr:  expr.EQ expr 
	expr:  expr.'+' term 
	expr:  expr.'-' term 

	EQ  shift 20
	'+'  shift 21
	'-'  shift 22
	.  reduce 9 (src line 75)


state 10
	decl:  IDENT.'=' absexpr 
	atom:  IDENT.    (20)

	'='  shift 23
	.  reduce 20 (src line 125)


state 11
	expr:  term.    (11)
	term:  term.'*' factor 
	term:  term.'/' factor 

	'*'  shift 24
	'/'  shift 25
	.  reduce 11 (src line 82)


state 12
	term:  factor.    (14)
	factor:  factor.atom 

	NUM  shift 14
	IDENT  shift 18
	BOOL  shift 15
	.  reduce 14 (src line 96)

	atom  goto 26

state 13
	factor:  atom.    (17)

	.  reduce 17 (src line 110)


state 14
	atom:  NUM.    (19)

	.  reduce 19 (src line 120)


state 15
	atom:  BOOL.    (21)

	.  reduce 21 (src line 129)


state 16
	top:  decls ';'.absexpr 
	decls:  decls ';'.decl 

	NUM  shift 14
	IDENT  shift 10
	BOOL  shift 15
	IF  shift 6
	'\\'  shift 8
	.  error

	expr  goto 9
	term  goto 11
	factor  goto 12
	atom  goto 13
	absexpr  goto 27
	abs  goto 4
	eqexpr  goto 5
	decl  goto 28

state 17
	absexpr:  IF eqexpr.THEN eqexpr ELSE eqexpr 

	THEN  shift 29
	.  error


state 18
	atom:  IDENT.    (20)

	.  reduce 20 (src line 125)


state 19
	abs:  '\\' IDENT.RARROW absexpr 

	RARROW  shift 30
	.  error


state 20
	eqexpr:  expr EQ.expr 

	NUM  shift 14
	IDENT  shift 18
	BOOL  shift 15
	.  error

	expr  goto 31
	term  goto 11
	factor  goto 12
	atom  goto 13

state 21
	expr:  expr '+'.term 

	NUM  shift 14
	IDENT  shift 18
	BOOL  shift 15
	.  error

	term  goto 32
	factor  goto 12
	atom  goto 13

state 22
	expr:  expr '-'.term 

	NUM  shift 14
	IDENT  shift 18
	BOOL  shift 15
	.  error

	term  goto 33
	factor  goto 12
	atom  goto 13

state 23
	decl:  IDENT '='.absexpr 

	NUM  shift 14
	IDENT  shift 18
	BOOL  shift 15
	IF  shift 6
	'\\'  shift 8
	.  error

	expr  goto 9
	term  goto 11
	factor  goto 12
	atom  goto 13
	absexpr  goto 34
	abs  goto 4
	eqexpr  goto 5

state 24
	term:  term '*'.factor 

	NUM  shift 14
	IDENT  shift 18
	BOOL  shift 15
	.  error

	factor  goto 35
	atom  goto 13

state 25
	term:  term '/'.factor 

	NUM  shift 14
	IDENT  shift 18
	BOOL  shift 15
	.  error

	factor  goto 36
	atom  goto 13

state 26
	factor:  factor atom.    (18)

	.  reduce 18 (src line 115)


state 27
	top:  decls ';' absexpr.    (2)

	.  reduce 2 (src line 37)


state 28
	decls:  decls ';' decl.    (3)

	.  reduce 3 (src line 45)


state 29
	absexpr:  IF eqexpr THEN.eqexpr ELSE eqexpr 

	NUM  shift 14
	IDENT  shift 18
	BOOL  shift 15
	.  error

	expr  goto 9
	term  goto 11
	factor  goto 12
	atom  goto 13
	eqexpr  goto 37

state 30
	abs:  '\\' IDENT RARROW.absexpr 

	NUM  shift 14
	IDENT  shift 18
	BOOL  shift 15
	IF  shift 6
	'\\'  shift 8
	.  error

	expr  goto 9
	term  goto 11
	factor  goto 12
	atom  goto 13
	absexpr  goto 38
	abs  goto 4
	eqexpr  goto 5

state 31
	eqexpr:  expr EQ expr.    (10)
	expr:  expr.'+' term 
	expr:  expr.'-' term 

	'+'  shift 21
	'-'  shift 22
	.  reduce 10 (src line 77)


state 32
	expr:  expr '+' term.    (12)
	term:  term.'*' factor 
	term:  term.'/' factor 

	'*'  shift 24
	'/'  shift 25
	.  reduce 12 (src line 87)


state 33
	expr:  expr '-' term.    (13)
	term:  term.'*' factor 
	term:  term.'/' factor 

	'*'  shift 24
	'/'  shift 25
	.  reduce 13 (src line 91)


state 34
	decl:  IDENT '=' absexpr.    (5)

	.  reduce 5 (src line 55)


state 35
	term:  term '*' factor.    (15)
	factor:  factor.atom 

	NUM  shift 14
	IDENT  shift 18
	BOOL  shift 15
	.  reduce 15 (src line 101)

	atom  goto 26

state 36
	term:  term '/' factor.    (16)
	factor:  factor.atom 

	NUM  shift 14
	IDENT  shift 18
	BOOL  shift 15
	.  reduce 16 (src line 105)

	atom  goto 26

state 37
	absexpr:  IF eqexpr THEN eqexpr.ELSE eqexpr 

	ELSE  shift 39
	.  error


state 38
	abs:  '\\' IDENT RARROW absexpr.    (22)

	.  reduce 22 (src line 134)


state 39
	absexpr:  IF eqexpr THEN eqexpr ELSE.eqexpr 

	NUM  shift 14
	IDENT  shift 18
	BOOL  shift 15
	.  error

	expr  goto 9
	term  goto 11
	factor  goto 12
	atom  goto 13
	eqexpr  goto 40

state 40
	absexpr:  IF eqexpr THEN eqexpr ELSE eqexpr.    (8)

	.  reduce 8 (src line 70)


19 terminals, 11 nonterminals
23 grammar rules, 41/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
60 working sets used
memory: parser 66/120000
30 extra closures
70 shift entries, 1 exceptions
25 goto entries
39 entries saved by goto default
Optimizer space used: output 56/120000
56 table entries, 5 zero
maximum spread: 19, maximum offset: 39

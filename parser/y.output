
state 0
	$accept: .program $end 
	margin: .    (2)

	.  reduce 2 (src line 35)

	program  goto 1
	margin  goto 2

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  margin.top margin 
	margin:  margin.NEWLINE 

	NEWLINE  shift 4
	NUM  shift 17
	IDENT  shift 13
	BOOL  shift 18
	IF  shift 9
	'\\'  shift 11
	'('  shift 19
	'['  shift 20
	.  error

	top  goto 3
	expr  goto 12
	term  goto 14
	factor  goto 15
	atom  goto 16
	absexpr  goto 5
	abs  goto 7
	cmpexpr  goto 8
	decl  goto 10
	decls  goto 6

state 3
	program:  margin top.margin 
	margin: .    (2)

	.  reduce 2 (src line 35)

	margin  goto 21

state 4
	margin:  margin NEWLINE.    (3)

	.  reduce 3 (src line 35)


state 5
	top:  absexpr.    (4)

	.  reduce 4 (src line 37)


state 6
	top:  decls.newlines absexpr 
	decls:  decls.newlines decl 

	NEWLINE  shift 23
	.  error

	newlines  goto 22

state 7
	absexpr:  abs.    (11)

	.  reduce 11 (src line 77)


state 8
	absexpr:  cmpexpr.    (12)

	.  reduce 12 (src line 82)


state 9
	absexpr:  IF.cmpexpr THEN cmpexpr ELSE cmpexpr 

	NUM  shift 17
	IDENT  shift 25
	BOOL  shift 18
	'('  shift 19
	'['  shift 20
	.  error

	expr  goto 12
	term  goto 14
	factor  goto 15
	atom  goto 16
	cmpexpr  goto 24

state 10
	decls:  decl.    (8)

	.  reduce 8 (src line 60)


state 11
	abs:  '\\'.IDENT RARROW absexpr 

	IDENT  shift 26
	.  error


state 12
	cmpexpr:  expr.    (15)
	cmpexpr:  expr.EQ expr 
	cmpexpr:  expr.NE expr 
	cmpexpr:  expr.'<' expr 
	cmpexpr:  expr.'>' expr 
	cmpexpr:  expr.LE expr 
	cmpexpr:  expr.GE expr 
	expr:  expr.'+' term 
	expr:  expr.'-' term 

	EQ  shift 27
	NE  shift 28
	LE  shift 31
	GE  shift 32
	'<'  shift 29
	'>'  shift 30
	'+'  shift 33
	'-'  shift 34
	.  reduce 15 (src line 97)


state 13
	decl:  IDENT.'=' absexpr 
	decl:  IDENT.SYMBOL IDENT '=' absexpr 
	atom:  IDENT.    (31)

	SYMBOL  shift 36
	'='  shift 35
	.  reduce 31 (src line 167)


state 14
	expr:  term.    (22)
	term:  term.'*' factor 
	term:  term.'/' factor 

	'*'  shift 37
	'/'  shift 38
	.  reduce 22 (src line 124)


state 15
	term:  factor.    (25)
	factor:  factor.atom 

	NUM  shift 17
	IDENT  shift 25
	BOOL  shift 18
	'('  shift 19
	'['  shift 20
	.  reduce 25 (src line 138)

	atom  goto 39

state 16
	factor:  atom.    (28)

	.  reduce 28 (src line 152)


state 17
	atom:  NUM.    (30)

	.  reduce 30 (src line 162)


state 18
	atom:  BOOL.    (32)

	.  reduce 32 (src line 171)


state 19
	atom:  '('.absexpr ')' 

	NUM  shift 17
	IDENT  shift 25
	BOOL  shift 18
	IF  shift 9
	'\\'  shift 11
	'('  shift 19
	'['  shift 20
	.  error

	expr  goto 12
	term  goto 14
	factor  goto 15
	atom  goto 16
	absexpr  goto 40
	abs  goto 7
	cmpexpr  goto 8

state 20
	atom:  '['.']' 

	']'  shift 41
	.  error


state 21
	program:  margin top margin.    (1)
	margin:  margin.NEWLINE 

	NEWLINE  shift 4
	.  reduce 1 (src line 29)


state 22
	top:  decls newlines.absexpr 
	decls:  decls newlines.decl 

	NUM  shift 17
	IDENT  shift 13
	BOOL  shift 18
	IF  shift 9
	'\\'  shift 11
	'('  shift 19
	'['  shift 20
	.  error

	expr  goto 12
	term  goto 14
	factor  goto 15
	atom  goto 16
	absexpr  goto 42
	abs  goto 7
	cmpexpr  goto 8
	decl  goto 43

state 23
	newlines:  NEWLINE.margin 
	margin: .    (2)

	.  reduce 2 (src line 35)

	margin  goto 44

state 24
	absexpr:  IF cmpexpr.THEN cmpexpr ELSE cmpexpr 

	THEN  shift 45
	.  error


state 25
	atom:  IDENT.    (31)

	.  reduce 31 (src line 167)


state 26
	abs:  '\\' IDENT.RARROW absexpr 

	RARROW  shift 46
	.  error


state 27
	cmpexpr:  expr EQ.expr 

	NUM  shift 17
	IDENT  shift 25
	BOOL  shift 18
	'('  shift 19
	'['  shift 20
	.  error

	expr  goto 47
	term  goto 14
	factor  goto 15
	atom  goto 16

state 28
	cmpexpr:  expr NE.expr 

	NUM  shift 17
	IDENT  shift 25
	BOOL  shift 18
	'('  shift 19
	'['  shift 20
	.  error

	expr  goto 48
	term  goto 14
	factor  goto 15
	atom  goto 16

state 29
	cmpexpr:  expr '<'.expr 

	NUM  shift 17
	IDENT  shift 25
	BOOL  shift 18
	'('  shift 19
	'['  shift 20
	.  error

	expr  goto 49
	term  goto 14
	factor  goto 15
	atom  goto 16

state 30
	cmpexpr:  expr '>'.expr 

	NUM  shift 17
	IDENT  shift 25
	BOOL  shift 18
	'('  shift 19
	'['  shift 20
	.  error

	expr  goto 50
	term  goto 14
	factor  goto 15
	atom  goto 16

state 31
	cmpexpr:  expr LE.expr 

	NUM  shift 17
	IDENT  shift 25
	BOOL  shift 18
	'('  shift 19
	'['  shift 20
	.  error

	expr  goto 51
	term  goto 14
	factor  goto 15
	atom  goto 16

state 32
	cmpexpr:  expr GE.expr 

	NUM  shift 17
	IDENT  shift 25
	BOOL  shift 18
	'('  shift 19
	'['  shift 20
	.  error

	expr  goto 52
	term  goto 14
	factor  goto 15
	atom  goto 16

state 33
	expr:  expr '+'.term 

	NUM  shift 17
	IDENT  shift 25
	BOOL  shift 18
	'('  shift 19
	'['  shift 20
	.  error

	term  goto 53
	factor  goto 15
	atom  goto 16

state 34
	expr:  expr '-'.term 

	NUM  shift 17
	IDENT  shift 25
	BOOL  shift 18
	'('  shift 19
	'['  shift 20
	.  error

	term  goto 54
	factor  goto 15
	atom  goto 16

state 35
	decl:  IDENT '='.absexpr 

	NUM  shift 17
	IDENT  shift 25
	BOOL  shift 18
	IF  shift 9
	'\\'  shift 11
	'('  shift 19
	'['  shift 20
	.  error

	expr  goto 12
	term  goto 14
	factor  goto 15
	atom  goto 16
	absexpr  goto 55
	abs  goto 7
	cmpexpr  goto 8

state 36
	decl:  IDENT SYMBOL.IDENT '=' absexpr 

	IDENT  shift 56
	.  error


state 37
	term:  term '*'.factor 

	NUM  shift 17
	IDENT  shift 25
	BOOL  shift 18
	'('  shift 19
	'['  shift 20
	.  error

	factor  goto 57
	atom  goto 16

state 38
	term:  term '/'.factor 

	NUM  shift 17
	IDENT  shift 25
	BOOL  shift 18
	'('  shift 19
	'['  shift 20
	.  error

	factor  goto 58
	atom  goto 16

state 39
	factor:  factor atom.    (29)

	.  reduce 29 (src line 157)


state 40
	atom:  '(' absexpr.')' 

	')'  shift 59
	.  error


state 41
	atom:  '[' ']'.    (34)

	.  reduce 34 (src line 179)


state 42
	top:  decls newlines absexpr.    (5)

	.  reduce 5 (src line 45)


state 43
	decls:  decls newlines decl.    (7)

	.  reduce 7 (src line 55)


state 44
	margin:  margin.NEWLINE 
	newlines:  NEWLINE margin.    (6)

	NEWLINE  shift 4
	.  reduce 6 (src line 53)


state 45
	absexpr:  IF cmpexpr THEN.cmpexpr ELSE cmpexpr 

	NUM  shift 17
	IDENT  shift 25
	BOOL  shift 18
	'('  shift 19
	'['  shift 20
	.  error

	expr  goto 12
	term  goto 14
	factor  goto 15
	atom  goto 16
	cmpexpr  goto 60

state 46
	abs:  '\\' IDENT RARROW.absexpr 

	NUM  shift 17
	IDENT  shift 25
	BOOL  shift 18
	IF  shift 9
	'\\'  shift 11
	'('  shift 19
	'['  shift 20
	.  error

	expr  goto 12
	term  goto 14
	factor  goto 15
	atom  goto 16
	absexpr  goto 61
	abs  goto 7
	cmpexpr  goto 8

state 47
	cmpexpr:  expr EQ expr.    (16)
	expr:  expr.'+' term 
	expr:  expr.'-' term 

	'+'  shift 33
	'-'  shift 34
	.  reduce 16 (src line 99)


state 48
	cmpexpr:  expr NE expr.    (17)
	expr:  expr.'+' term 
	expr:  expr.'-' term 

	'+'  shift 33
	'-'  shift 34
	.  reduce 17 (src line 103)


state 49
	cmpexpr:  expr '<' expr.    (18)
	expr:  expr.'+' term 
	expr:  expr.'-' term 

	'+'  shift 33
	'-'  shift 34
	.  reduce 18 (src line 107)


state 50
	cmpexpr:  expr '>' expr.    (19)
	expr:  expr.'+' term 
	expr:  expr.'-' term 

	'+'  shift 33
	'-'  shift 34
	.  reduce 19 (src line 111)


state 51
	cmpexpr:  expr LE expr.    (20)
	expr:  expr.'+' term 
	expr:  expr.'-' term 

	'+'  shift 33
	'-'  shift 34
	.  reduce 20 (src line 115)


state 52
	cmpexpr:  expr GE expr.    (21)
	expr:  expr.'+' term 
	expr:  expr.'-' term 

	'+'  shift 33
	'-'  shift 34
	.  reduce 21 (src line 119)


state 53
	expr:  expr '+' term.    (23)
	term:  term.'*' factor 
	term:  term.'/' factor 

	'*'  shift 37
	'/'  shift 38
	.  reduce 23 (src line 129)


state 54
	expr:  expr '-' term.    (24)
	term:  term.'*' factor 
	term:  term.'/' factor 

	'*'  shift 37
	'/'  shift 38
	.  reduce 24 (src line 133)


state 55
	decl:  IDENT '=' absexpr.    (9)

	.  reduce 9 (src line 65)


state 56
	decl:  IDENT SYMBOL IDENT.'=' absexpr 

	'='  shift 62
	.  error


state 57
	term:  term '*' factor.    (26)
	factor:  factor.atom 

	NUM  shift 17
	IDENT  shift 25
	BOOL  shift 18
	'('  shift 19
	'['  shift 20
	.  reduce 26 (src line 143)

	atom  goto 39

state 58
	term:  term '/' factor.    (27)
	factor:  factor.atom 

	NUM  shift 17
	IDENT  shift 25
	BOOL  shift 18
	'('  shift 19
	'['  shift 20
	.  reduce 27 (src line 147)

	atom  goto 39

state 59
	atom:  '(' absexpr ')'.    (33)

	.  reduce 33 (src line 175)


state 60
	absexpr:  IF cmpexpr THEN cmpexpr.ELSE cmpexpr 

	ELSE  shift 63
	.  error


state 61
	abs:  '\\' IDENT RARROW absexpr.    (14)

	.  reduce 14 (src line 91)


state 62
	decl:  IDENT SYMBOL IDENT '='.absexpr 

	NUM  shift 17
	IDENT  shift 25
	BOOL  shift 18
	IF  shift 9
	'\\'  shift 11
	'('  shift 19
	'['  shift 20
	.  error

	expr  goto 12
	term  goto 14
	factor  goto 15
	atom  goto 16
	absexpr  goto 64
	abs  goto 7
	cmpexpr  goto 8

state 63
	absexpr:  IF cmpexpr THEN cmpexpr ELSE.cmpexpr 

	NUM  shift 17
	IDENT  shift 25
	BOOL  shift 18
	'('  shift 19
	'['  shift 20
	.  error

	expr  goto 12
	term  goto 14
	factor  goto 15
	atom  goto 16
	cmpexpr  goto 65

state 64
	decl:  IDENT SYMBOL IDENT '=' absexpr.    (10)

	.  reduce 10 (src line 70)


state 65
	absexpr:  IF cmpexpr THEN cmpexpr ELSE cmpexpr.    (13)

	.  reduce 13 (src line 86)


29 terminals, 14 nonterminals
35 grammar rules, 66/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
63 working sets used
memory: parser 104/120000
46 extra closures
162 shift entries, 1 exceptions
37 goto entries
66 entries saved by goto default
Optimizer space used: output 101/120000
101 table entries, 13 zero
maximum spread: 29, maximum offset: 63
